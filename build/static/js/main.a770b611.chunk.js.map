{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","Notification","_ref","notifMessage","errorMessage","_jsxs","_Fragment","children","_jsx","className","Filter","setFilter","onChange","e","target","value","PersonForm","props","onSubmit","addPerson","setNewName","setNewNumber","type","Persons","_ref2","personsToShow","onDeletePerson","map","person","Person","onDelete","name","_ref3","number","onClick","id","App","persons","setPersons","useState","newName","newNumber","filter","notification","setNotification","error","setError","notify","message","length","arguments","undefined","setTimeout","showError","useEffect","axios","get","then","response","data","preventDefault","existing","find","p","newObject","window","confirm","concat","updatePerson","put","updated","catch","post","val","toLowerCase","includes","toDelete","delete","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a770b611.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = `/api/persons`;\r\n\r\nexport const getAllPersons = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nexport const createPerson = (newObject) => {\r\n  return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nexport const updatePerson = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then((response) => response.data);\r\n};\r\n\r\nexport const deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\r\n};\r\n","const Notification = ({ notifMessage, errorMessage }) => {\r\n  if (notifMessage === null && errorMessage === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {notifMessage && <div className=\"notif\">{notifMessage}</div>}\r\n      {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { getAllPersons, createPerson, updatePerson, deletePerson } from \"./services/persons\"\r\nimport Notification from \"./components/Notification\"\r\n\r\nconst Filter = ({ setFilter }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={(e) => setFilter(e.target.value)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input onChange={(e) => props.setNewName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={(e) => props.setNewNumber(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({ personsToShow, onDeletePerson }) => {\r\n  return (\r\n    <div>\r\n      {personsToShow().map((person) => (\r\n        <Person key={person.name} person={person} onDelete={onDeletePerson} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Person = ({ person, onDelete }) => {\r\n  return (\r\n    <p>\r\n      {person.name} {person.number} <button onClick={() => onDelete(person.id)}>delete</button>\r\n    </p>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState(\"\")\r\n  const [newNumber, setNewNumber] = useState(\"\")\r\n  const [filter, setFilter] = useState(\"\")\r\n  const [notification, setNotification] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const notify = (message, length = 5000) => {\r\n    setNotification(message)\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, length)\r\n  }\r\n\r\n  const showError = (error, length = 5000) => {\r\n    setError(error)\r\n    setTimeout(() => {\r\n      setError(null)\r\n    }, length)\r\n  }\r\n\r\n  const addPerson = (e) => {\r\n    e.preventDefault()\r\n    const existing = persons.find((p) => p.name === newName)\r\n    if (!existing) {\r\n      createPerson({\r\n        name: newName,\r\n        number: newNumber,\r\n      }).then((person) => {\r\n        setPersons(persons.concat(person))\r\n        notify(`Added ${person.name}`)\r\n      })\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        updatePerson(existing.id, {\r\n          name: newName,\r\n          number: newNumber,\r\n        })\r\n          .then((updated) => {\r\n            setPersons([...persons.filter((p) => p.id !== existing.id), updated])\r\n            notify(`Updated the number of ${updated.name} to ${updated.number}`)\r\n          })\r\n          .catch(() => {\r\n            showError(`Information of ${newName} has already been removed from server`)\r\n            setPersons(persons.filter((p) => p.id !== existing.id))\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  const personsToShow = () => {\r\n    if (filter === \"\") return persons\r\n    return persons.filter((val) => val.name.toLowerCase().includes(filter.toLowerCase()))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllPersons().then((persons) => {\r\n      setPersons(persons)\r\n    })\r\n  }, [])\r\n\r\n  const onDeletePerson = (id) => {\r\n    const toDelete = persons.find((person) => person.id === id)\r\n    if (window.confirm(`Delete ${toDelete.name} ?`)) {\r\n      deletePerson(toDelete.id)\r\n        .then(() => {\r\n          setPersons(persons.filter((p) => p.id !== id))\r\n          notify(`Deleted ${toDelete.name}`)\r\n        })\r\n        .catch(() => {\r\n          showError(`Information of ${toDelete.name} has already been removed from server`)\r\n          setPersons(persons.filter((p) => p.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notifMessage={notification} errorMessage={error} />\r\n      <Filter setFilter={setFilter} />\r\n      <h2>add a new</h2>\r\n      <PersonForm addPerson={addPerson} setNewName={setNewName} setNewNumber={setNewNumber} />\r\n      <h2>Numbers</h2>\r\n      <Persons personsToShow={personsToShow} onDeletePerson={onDeletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}